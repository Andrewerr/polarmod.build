BUILD_OUT_DIR="out_dir/"
DROIDDIR=$(pwd)

export PATH="$PATH:/root/bin/:$BASEDIR/build/make/tools/bin/"

include "droidbuild/keys.sh"
include "droidbuild/generic.sh"
include_if_exists "/root/config.sh"

target_sync-initial(){
   exec git config --global user.email "$GIT_EMAIL"
   exec git config --global user.name "$GIT_USERNAME"
   exec "mkdir -p $BASEDIR/.repo/local_manifests/"
   exec "cp /root/manifests/* .repo/local_manifests/"
   exec "/root/bin/repo init --depth=1 -u $BASE_REPO -b $BASE_REPO_BRANCH && repo sync --current-branch --force-sync --no-clone-bundle --no-tags --optimized-fetch --prune -j $N_PROC" 
   success "Sync successful"
}

target_env(){
  export out_dir=$BUILD_OUT_DIR
  require_directory $out_dir
  datetime=`date '+%Y%m%d_%H%M%S'`
  export signature="${devname}-${datetime}-${buildtype}"
  export BUILD_DISPLAY_ID="${devname}-${datetime}-${buildtype}-${BUILD_ID}"
}

target_device(){
  target_env  
  if $TARGET_NEEDS_RESYNC; then
    info "Target requires to resync sources"
    info "Updating local manifests"
    exec "rm -rf $BASEDIR/.repo/local_manifests/*.xml"
    for file in ${TARGET_LOCAL_MANIFESTS}; do
      exec "cp ${file} $BASEDIR/.repo/local_manifests/"
    done
  fi
  # The configuration is done by calling droidbuild
  # Now we need to re-include files and call droidbuild
  for LOCAL_PATH in ${DROIDBUILD_MODULES[@]}; do
    include $LOCAL_PATH/Droidbuild.sh
    droidbuild  
  done
}

include "droidbuild/aux.sh"

DROIDBUILD_MODULES=()

droidbuild(){
    info "Collecting Droidbuild modules"
    # Include droid build files
    glob_files "**/Droidbuild.sh" $dir files
    for file in ${files[@]}; do
        TARGET_NAME="$1"
        LOCAL_PATH="$(pwd)/$(dirname $file)"
        info "Including $file"
        DROIDBUILD_MODULES+=$LOCAL_PATH
        include $file
    done
}

include droidbuild/build_vars.sh
droidbuild
